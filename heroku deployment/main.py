# -*- coding: utf-8 -*-
"""deployment_of_public_API.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16swcKnA9aLJ05vn1Le2j4sRE9T2MU1iR
"""

#!pip install fastapi -q
#!pip install uvicorn -q
#!pip install pickles -q
#!pip install pydantic -q
#!pip install scikit-learn -q
#!pip install requests -q
#!pip install pypi-json -q


from fastapi import FastAPI
from pydantic import BaseModel
import pickle
import json
import uvicorn
from fastapi.middleware.cors import CORSMiddleware


app=FastAPI()

origins=["*"]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"]
   )

class model_input(BaseModel):
  Pregnancies:int
  Glucose: int
  BloodPressure: int
  SkinThickness: int
  Insulin : int
  BMI : float
  DiabetesPedigreeFunction : float
  Age : int

#loading the saved model
model=pickle.load(open("model.pkl","rb"))

@app.post('/diabetic_prediction')
def diabetic_prediction(input_parameters:model_input):
  input_data=input_parameters.json() #turn the data into json format
  input_dictionary=json.loads(input_data) # turn the data from json into python dictionary format

  preg=input_dictionary['Pregnancies']
  glu=input_dictionary['Glucose']
  bp=input_dictionary['BloodPressure']
  skin=input_dictionary['SkinThickness']
  ins=input_dictionary['Insulin']
  bmi=input_dictionary['BMI']
  dpf=input_dictionary['DiabetesPedigreeFunction']
  age=input_dictionary['Age']

  input_list=[preg,glu,bp,skin,ins,bmi,dpf,age]

  prediction=model.predict([input_list])
  if (prediction[0] ==0 ) :
    return "the person isnot non diabetic"
  else:
    return "the person is diabetic"

